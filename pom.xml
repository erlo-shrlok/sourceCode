<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion> <!-- 指定POM模型的版本，通常是4.0.0 -->

	<groupId>com.jinzunyue</groupId> <!-- 项目组ID，通常表示项目开发团队或组织 -->
	<artifactId>mulsys4</artifactId> <!-- 项目ID，即项目名称 -->
	<version>1.0.0</version> <!-- 项目版本 -->

	<name>mulsys4</name> <!-- 项目名 -->
	<description>溯源码系统</description> <!-- 项目描述 -->

	<!-- 自定义一些属性值，可以在本 POM 文件中进行重用 -->
	<properties>
		<!-- 这里定义了一些版本号和编码格式，以便在后面的依赖声明和构建插件配置中使用 -->
		<java.version>1.8</java.version>
		<slf4j.version>1.7.30</slf4j.version>
		<logback.version>1.2.3</logback.version>
		<hutool.version>5.7.16</hutool.version>
		<mybatis-plus-generator.version>3.5.2</mybatis-plus-generator.version>
		<mybatis-plus-boot-starter.version>3.4.3.3</mybatis-plus-boot-starter.version>
		<velocity.version>1.7</velocity.version>
		<mybatis-spring-boot-starter.version>2.3.1</mybatis-spring-boot-starter.version>
		<mysql-connector-java.version>8.0.32</mysql-connector-java.version>
		<jjwt.version>0.9.1</jjwt.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<aspectjrt.version>1.9.6</aspectjrt.version>
	</properties>

	<!-- 子模块声明，用于声明本项目包含的子模块 -->
	<modules>
		<!-- 这里列出了本项目包含的所有子模块 -->
		<module>share</module>
		<module>sys1</module>
		<module>sys2</module>
	</modules>

	<packaging>pom</packaging> <!-- 指定了项目的打包方式，这里为pom，即这是一个聚合项目，它将会把各个模块聚合在一起进行构建 -->

	<!-- 依赖管理，用于统一管理项目中的所有依赖的版本 -->
	<dependencyManagement>
		<dependencies>

			<!-- SpringBoot的依赖配置-->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>2.2.13.RELEASE</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- 这里列出了项目中用到的所有依赖，包括各种库和框架等 -->
			<!--AOP-->
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjrt</artifactId>
				<version>${aspectjrt.version}</version>
			</dependency>
			<!--SLF4J日志依赖-->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

			<!--SLF4J的实现：：Logback-->
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
			</dependency>
			<!--hutool工具包-->
			<dependency>
				<groupId>cn.hutool</groupId>
				<artifactId>hutool-all</artifactId>
				<version>${hutool.version}</version>
			</dependency>
			<!--代码生成-->
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus-generator</artifactId>
				<version>${mybatis-plus-generator.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.velocity</groupId>
				<artifactId>velocity</artifactId>
				<version>${velocity.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis.spring.boot</groupId>
				<artifactId>mybatis-spring-boot-starter</artifactId>
				<version>${mybatis-spring-boot-starter.version}</version>
			</dependency>
			<!-- MySQL JDBC driver -->
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql-connector-java.version}</version>
			</dependency>
			<!-- MyBatis-Plus starter -->
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus-boot-starter</artifactId>
				<version>${mybatis-plus-boot-starter.version}</version>
			</dependency>
			<!--JSON Web Token-->
			<dependency>
				<groupId>io.jsonwebtoken</groupId>
				<artifactId>jjwt</artifactId>
				<version>${jjwt.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<!-- 这里可以直接声明项目的依赖-->

	<!-- 构建配置，包括了项目构建过程中用到的插件等信息 -->
	<build>
		<plugins>
			<!-- 这里配置了 maven-compiler-plugin 插件，用于编译项目的Java代码 -->
<!--			<plugin>-->
<!--				<groupId>org.apache.maven.plugins</groupId>-->
<!--				<artifactId>maven-compiler-plugin</artifactId>-->
<!--				<version>3.1</version>-->
<!--				<configuration>-->
<!--					<source>${java.version}</source>-->
<!--					<target>${java.version}</target>-->
<!--					<encoding>${project.build.sourceEncoding}</encoding>-->
<!--				</configuration>-->
<!--			</plugin>-->

<!--			防止 Maven 在找不到 web.xml 文件时失败-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<!-- 仓库声明，用于声明项目中用到的Maven仓库地址 -->
	<repositories>
		<!-- 这里指定了阿里云的 Maven 仓库 -->
<!--		<repository>-->
<!--			<id>public</id>-->
<!--			<name>aliyun nexus</name>-->
<!--			<url>http://maven.aliyun.com/nexus/content/groups/public/</url>-->
<!--			<releases>-->
<!--				<enabled>true</enabled>-->
<!--			</releases>-->
<!--		</repository>-->
	</repositories>

	<!-- 插件仓库声明，用于声明项目中用到的Maven插件仓库地址 -->
	<pluginRepositories>
		<!-- 这里指定了阿里云的 Maven 插件仓库 -->
<!--		<pluginRepository>-->
<!--			<id>public</id>-->
<!--			<name>aliyun nexus</name>-->
<!--			<url>http://maven.aliyun.com/nexus/content/groups/public/</url>-->
<!--			<releases>-->
<!--				<enabled>true</enabled>-->
<!--			</releases>-->
<!--			<snapshots>-->
<!--				<enabled>false</enabled>-->
<!--			</snapshots>-->
<!--		</pluginRepository>-->
	</pluginRepositories>

</project>
